{"version":3,"sources":["components/contactsForm/ContactsForm.js","components/contactsList/ContactsList.js","components/section/Section.js","components/filter/ContactsFilter.js","redux/contacts/contactsSelectors.js","components/Contacts.js","redux/contacts/contactsOperation.js","pages/ContactsPage.js"],"names":["ContactsForm","state","name","number","onHandleSubmit","e","preventDefault","props","checkDublicateName","alert","addContact","setState","onHandleChange","target","value","className","onSubmit","this","type","onChange","pattern","title","required","Component","ContactsList","contacts","onDeleteContact","map","contact","onClick","id","Section","children","ContactsFilter","filter","setFilter","getContactSelector","filterContactSelector","loaderContactSelector","isContactLoading","errorContactSelector","error","getFilteringContacts","createSelector","toLowerCase","includes","Contacts","items","a","addContactOperation","deleteContactsOperation","some","filterContacts","getFilteredContacts","console","log","getAllContactsOperation","isLoading","mapDispatchToProps","dispatch","setContactsLoading","axios","get","data","Object","keys","key","getAllContacts","post","setError","response","delete","deleteContact","connect","Contactspage"],"mappings":"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","file":"static/js/6.536cbf31.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ContactsForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\"\n  };\n\n  onHandleSubmit = e => {\n    e.preventDefault();\n    if (this.props.checkDublicateName(this.state.name)) {\n      alert(`${this.state.name} already exist`);\n      return;\n    }\n\n    this.props.addContact(this.state);\n\n    this.setState({\n      name: \"\",\n      number: \"\"\n    });\n  };\n  onHandleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <form className=\"contactsForm\" onSubmit={this.onHandleSubmit}>\n        <>\n          Name\n          <input\n            type=\"text\"\n            onChange={this.onHandleChange}\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </>\n        <>\n          Number\n          <input\n            type=\"tel\"\n            onChange={this.onHandleChange}\n            value={this.state.number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </>\n        <button className=\"addContact\" type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactsForm.propTypes = {\n  onHandleSubmit: PropTypes.func,\n  name: PropTypes.string,\n  number: PropTypes.string\n}.isRequired;\n\nexport default ContactsForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <div className=\"card\">\n        <ul className=\"contactItem\">\n          {contacts.map(contact => (\n            <li className=\"contactLi\" key={contact.id}>\n              <p>{contact.name}</p>\n              <p>{contact.number}</p>\n              <button type=\"button\" onClick={onDeleteContact} id={contact.id}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired\n    })\n  )\n};\nexport default ContactsList;\n","import React from 'react'\n\nconst Section = ({title, children}) => {\n    return (\n        <>\n            <h2>{title}</h2>\n            {children}\n            \n        </>\n    );\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsFilter = ({ filter, setFilter }) => {\n  return (\n    <>\n      <label>\n        Filter\n        <input type=\"text\" value={filter} onChange={setFilter} />\n      </label>\n    </>\n  );\n};\n\nContactsFilter.propTypes = {\n  filter: PropTypes.string,\n  setFilter: PropTypes.func\n}.isRequired;\nexport default ContactsFilter;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContactSelector = state => state.contacts.contacts;\nconst filterContactSelector = state => state.contacts.filter;\nconst loaderContactSelector = state => state.contacts.isContactLoading;\nconst errorContactSelector = state => state.contacts.error;\n\nconst getFilteringContacts = createSelector(\n  [getContactSelector, filterContactSelector],\n  (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n);\nexport { getContactSelector, filterContactSelector, loaderContactSelector, errorContactSelector, getFilteringContacts };","import React, { Component } from \"react\";\nimport ContactsForm from \"./contactsForm/ContactsForm\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport Section from \"./section/Section\";\nimport { connect } from \"react-redux\";\nimport ContactsFilter from \"./filter/ContactsFilter\";\nimport { filterContacts } from \"../redux/contacts/contactsAction\";\nimport { addContactOperation, deleteContactsOperation, getAllContactsOperation } from \"../redux/contacts/contactsOperation\";\nimport {errorContactSelector, filterContactSelector, getContactSelector, getFilteringContacts, loaderContactSelector} from \"../redux/contacts/contactsSelectors\";\n\nclass Contacts extends Component {\n  state = {\n    contacts: {\n      items: [],\n      filter: \"\"\n    }\n  };\n\n  async componentDidMount() {\n    this.props.getAllContactsOperation();\n  }\n\n  addContact = async contact => {\n    this.props.addContactOperation(contact);\n  };\n\n  onDeleteContact = async e => {\n    const { id } = e.target;\n    this.props.deleteContactsOperation(id);\n  };\n\n  checkDublicateName = name => {\n    return this.props.contacts.some(contact => contact.name === name);\n  };\n\n  setFilter = e => {\n    const { value } = e.target;\n    this.props.filterContacts(value);\n  };\n\n  getFilteredContacts = () => {\n    console.log(this.props);\n    return this.props.contacts.filter(contact => contact.name.toLowerCase().includes(this.props.filter.toLowerCase()));\n  };\n\n  render() {\n    return (\n      <>\n        <>\n          {this.props.error && <h2>{this.props.error}</h2>}\n          {this.props.isLoading && <h2>Loading....</h2>}\n          <Section title=\"Phonebook\">\n            <ContactsForm addContact={this.addContact} checkDublicateName={this.checkDublicateName} />\n          </Section>\n        </>\n        <>\n          <Section title=\"Find contact by name\">\n            <ContactsFilter filter={this.props.filter} setFilter={this.setFilter} />\n          </Section>\n        </>\n        <>\n          <Section title=\"Contacts\">\n            <ContactsList contacts={this.getFilteredContacts()} onDeleteContact={this.onDeleteContact} />\n          </Section>\n        </>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getContactSelector(state),\n    filter: filterContactSelector(state),\n    error: errorContactSelector(state),\n    filterContacts: getFilteringContacts(state),\n    isLoading: loaderContactSelector(state)\n  };\n};\n\nconst mapDispatchToProps = {getAllContactsOperation, addContactOperation, deleteContactsOperation, filterContacts};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import axios from \"axios\";\nimport { setContactsLoading, setError } from \"./contactsAction\";\n\nimport { addContact, deleteContact, getAllContacts } from \"./contactsAction\";\n\nconst getAllContactsOperation = () => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    const { data } = await axios.get(`https://phonebook-3ae5c-default-rtdb.firebaseio.com/contacts.json`);\n    if (data) {\n      const contacts = Object.keys(data).map(key => ({ id: key, ...data[key] }));\n      dispatch(getAllContacts(contacts));\n    }\n  } catch (error) {\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nconst addContactOperation = contact => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    const { data } = await axios.post(`https://phonebook-3ae5c-default-rtdb.firebaseio.com/contacts.json`, contact);\n    dispatch(addContact({ ...contact, id: data.name }));\n  } catch (error) {\n    dispatch(setError(error.response.data.error));\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nconst deleteContactsOperation = id => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    await axios.delete(`https://phonebook-3ae5c-default-rtdb.firebaseio.com/contacts/${id}.json`);\n    dispatch(deleteContact(id));\n  } catch (error) {\n    dispatch(setError(error.response.data.error));\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nexport { addContactOperation, deleteContactsOperation, getAllContactsOperation };\n","import React, { Component } from \"react\";\nimport Contacts from \"../components/Contacts\";\n\nclass Contactspage extends Component {\n  render() {\n    return <Contacts />;\n  }\n}\n\nexport default Contactspage;\n"],"sourceRoot":""}