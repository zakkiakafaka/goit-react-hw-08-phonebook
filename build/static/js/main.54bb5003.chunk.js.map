{"version":3,"sources":["redux/contacts/contactsAction.js","routes/mainRoutes.js","components/userMenu/UserMenu.js","components/header/navigation/NavigationListItem.js","components/header/navigation/Navigation.js","components/header/Header.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/main/Main.js","components/App.js","redux/contacts/contactsReducer.js","redux/auth/authReducers.js","redux/store.js","index.js","redux/auth/authActions.js"],"names":["addContact","createAction","deleteContact","getAllContacts","filterContacts","setError","resetError","setContactsLoading","mainRoutes","name","path","exact","component","lazy","isPrivate","isRestricted","connect","state","email","auth","tokens","isAuth","idToken","logOut","className","type","onClick","NavigationListItem","item","location","to","pathname","from","activeClassName","withRouter","map","Header","PrivateRoute","PublicRoute","fallback","key","App","contactsReducer","createReducer","payload","filter","contact","id","_","filterReducer","contactLoaderReducer","contactErrorReducer","contactReducer","combineReducers","contacts","isLoadind","error","tokenReducer","registerSuccess","loginSuccess","loaderReducer","registerRequest","registerError","loginRequest","loginError","errorReducer","authReducer","isLoading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","storage","whitelist","rootReducer","persistReducer","store","configureStore","reducer","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54bb5003.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contacts/addContact\");\nexport const deleteContact = createAction(\"contacts/deleteContact\");\nexport const getAllContacts = createAction(\"contacts/getAllContacts\");\nexport const filterContacts = createAction(\"contacts/filterContacts\");\n\nexport const setError = createAction(\"contacts/setError\");\nexport const resetError = createAction(\"contacts/resetError\");\nexport const setContactsLoading = createAction(\"contacts/setContactsLoading\");","import { lazy } from \"react\";\n\nconst mainRoutes = [\n  {\n    name: \"Home\",\n    path: \"/\",\n    exact: true,\n    component: lazy(() => import(\"../pages/HomePage\" /*webpackChankName:'HomePage'*/)),\n    isPrivate: false,\n    isRestricted: false,\n  },\n  {\n    name: \"Contacts\",\n    path: \"/contacts\",\n    exact: false,\n    component: lazy(() => import(\"../pages/ContactsPage\" /*webpackChankName:'ContactsPage'*/)),\n    isPrivate: true,\n    isRestricted: false,\n  },\n\n  {\n    name: \"Registration\",\n    path: \"/registration\",\n    exact: true,\n    component: lazy(() => import(\"../pages/AuthPage\" /*webpackChankName:'AuthPage'*/)),\n    isPrivate: false,\n    isRestricted: true,\n  },\n  {\n    name: \"Login\",\n    path: \"/login\",\n    exact: true,\n    component: lazy(() => import(\"../pages/AuthPage\" /*webpackChankName:'AuthPage'*/)),\n    isPrivate: false,\n    isRestricted: true,\n  }\n];\n\nexport default mainRoutes;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../../redux/auth/authActions\";\n\nconst UserMenu = ({ email, isAuth, logOut }) => {\n  return (\n    <>\n      <p className=\"\">{email}</p>\n      {isAuth && (\n        <button className=\"logOutBtn\" type=\"button\" onClick={() => logOut()}>\n          LogOut\n        </button>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    email: state.auth.tokens.email,\n    isAuth: state.auth.tokens.idToken\n  };\n};\n\nexport default connect(mapStateToProps,{ logOut })(UserMenu);","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavigationListItem = ({ item, location, isAuth }) => {\n  return (\n    <>\n      {!item.isPrivate &&\n        (!item.isRestricted && (\n          <li className=\"listItem\">\n            <NavLink\n              to={{\n                pathname: item.path,\n\n                state: { from: location.pathname }\n              }}\n              className=\"link\"\n              activeClassName=\"activeLink\"\n              exact={item.exact}\n            >\n              {item.name}\n            </NavLink>\n          </li>\n        ))}\n      {isAuth &&\n        (item.isPrivate && !item.isRestricted && (\n          <li className=\"listItem\">\n            <NavLink\n              to={{\n                pathname: item.path,\n\n                state: { from: location.pathname }\n              }}\n              className=\"link\"\n              activeClassName=\"activeLink\"\n              exact={item.exact}\n            >\n              {item.name}\n            </NavLink>\n          </li>\n        ))}\n      {!isAuth &&\n        (!item.isPrivate && item.isRestricted && (\n          <li className=\"listItem\">\n            <NavLink\n              to={{\n                pathname: item.path,\n\n                state: { from: location.pathname }\n              }}\n              className=\"link\"\n              activeClassName=\"activeLink\"\n              exact={item.exact}\n            >\n              {item.name}\n            </NavLink>\n          </li>\n        ))}\n    </>\n  );\n};\n\nexport default NavigationListItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport mainRoutes from \"../../../routes/mainRoutes\";\nimport UserMenu from \"../../userMenu/UserMenu\";\nimport NavigationListItem from \"./NavigationListItem\";\n\nconst Navigation = ({ location, isAuth }) => {\n  return (\n    <>\n      <>\n        <ul className=\"list\">\n          {mainRoutes.map(item => (\n            <NavigationListItem item={item} location={location} key={item.path} isAuth={isAuth} />\n          ))}\n          {isAuth && <UserMenu />}\n        </ul>\n      </>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.tokens.idToken\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Navigation));\n","import React from \"react\";\nimport Navigation from \"./navigation/Navigation\";\n\nconst Header = () => {\n  return (\n    <>\n      <Navigation />\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router\";\n\nconst PrivateRoute = ({ path, exact, component, isAuth }) => {\n  return isAuth ? <Route path={path} exact={exact} component={component} /> : <Redirect to=\"/login\" />;\n};\n\nexport default PrivateRoute;","import React from \"react\";\nimport { Redirect, Route } from \"react-router\";\nconst PublicRoute = ({ path, exact, component, isAuth, isRestricted }) => {\n  return isAuth && isRestricted ? <Redirect to=\"/contacts\" /> : <Route path={path} exact={exact} component={component} />;\n};\n\nexport default PublicRoute;","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport mainRoutes from \"../../routes/mainRoutes\";\nimport PrivateRoute from \"../../routes/PrivateRoute\";\nimport PublicRoute from \"../../routes/PublicRoute\";\n\nconst Main = ({ isAuth }) => {\n  return (\n    <>\n      <Suspense fallback={<h2>LOADING....</h2>}>\n        <Switch>\n          {mainRoutes.map(item =>\n            item.isPrivate ? (\n              <PrivateRoute {...item} key={item.path} isAuth={isAuth} />\n            ) : (\n              <PublicRoute {...item} key={item.path} isAuth={isAuth} />\n            )\n          )}\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.tokens.idToken\n  };\n};\nexport default connect(mapStateToProps)(Main);\n","import React, { Suspense } from \"react\";\nimport Header from \"./header/Header\";\nimport Main from \"./main/Main\";\n\nconst App = () => {\n  return (\n    <>\n      <Suspense fallback={<h2>I'M LOADING...</h2>}>\n        <Header />\n        <Main />\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\n\nimport {\n  addContact,\n  deleteContact,\n  getAllContacts,\n  filterContacts,\n  setContactsLoading,\n  setError,\n  resetError\n} from \"./contactsAction\";\n\nexport const contactsReducer = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) => [...state.filter(contact => contact.id !== payload)],\n  [getAllContacts]: (_, { payload }) => payload\n});\n\nexport const filterReducer = createReducer(\"\", {\n  [filterContacts]: (_, { payload }) => payload\n});\n\nconst contactLoaderReducer = createReducer(false, {\n  [setContactsLoading]: state => !state\n});\n\nconst contactErrorReducer = createReducer(\"\", {\n  [setError]: (_, { payload }) => payload,\n  [resetError]: () => \"\"\n});\n\nconst contactReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  isLoadind: contactLoaderReducer,\n  error: contactErrorReducer\n});\n\nexport default contactReducer;","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport { loginError, loginRequest, loginSuccess, logOut, registerError, registerRequest, registerSuccess } from \"./authActions\";\n\nconst tokenReducer = createReducer(\n  {},\n  {\n    [registerSuccess]: (_, { payload }) => payload,\n    [loginSuccess]: (_, { payload }) => payload,\n    [logOut]: () => ({})\n  }\n);\n\nconst loaderReducer = createReducer(false, {\n  [registerRequest]: state => !state,\n  [registerSuccess]: state => !state,\n  [registerError]: state => !state,\n  [loginRequest]: state => !state,\n  [loginSuccess]: state => !state,\n  [loginError]: state => !state,\n  [logOut]: () => false\n});\n\nconst errorReducer = createReducer(\"\", {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logOut]: () => \"\"\n});\n\nconst authReducer = combineReducers({\n  tokens: tokenReducer,\n  isLoading: loaderReducer,\n  error: errorReducer\n});\n\nexport default authReducer;","import { combineReducers } from \"redux\";\nimport contactReducer from \"./contacts/contactsReducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport authReducer from \"./auth/authReducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; \nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n];\n\nconst persistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"tokens\"]\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  auth: persistReducer(persistConfig, authReducer)\n});\n\nconst store = configureStore({ reducer: rootReducer, middleware });\n\npersistStore(store);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const registerRequest = createAction(\"auth/registerRequest\");\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\nexport const registerError = createAction(\"auth/registerError\");\n\nexport const loginRequest = createAction(\"auth/loginRequest\");\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\nexport const loginError = createAction(\"auth/loginError\");\n\nexport const logOut = createAction(\"auth/logOut\");"],"sourceRoot":""}